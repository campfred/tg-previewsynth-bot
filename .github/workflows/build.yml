name: Application build

permissions:
    contents: read
    packages: write
    attestations: write

on:
    push:
        branches:
            - main
        tags:
            - "*"
        paths:
            - src/**
            - "*.example"
            - deno.*
            - dockerfile

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    compile:
        name: Compile binaries
        runs-on: ubuntu-latest

        permissions:
            contents: read

        strategy:
            matrix:
                os: [windows, macos, linux]
                arch: [amd64, arm64]
                exclude:
                    - os: windows
                      arch: arm64

        steps:
            - name: Checkout repository
              uses: actions/checkout@v5

            - name: Set up Deno
              uses: denoland/setup-deno@v2
              with:
                  deno-version: v2.x

            # - name: Install dependencies
            #   run: deno task install

            - name: Cache dependencies
              run: deno task cache

            - name: Compile binaries
              run: |
                  deno task compile-${{ matrix.os }}-${{ matrix.arch }}

            - name: Upload artifacts
              uses: actions/upload-artifact@v5
              with:
                  name: PreviewSynthBot-${{ matrix.os }}-${{ matrix.arch }}
                  path: output/previewsynth-${{ matrix.os }}-${{ matrix.arch }}*
                  if-no-files-found: error

    containerize:
        name: Build and publish container image
        if: ${{ github.ref_name == github.event.repository.default_branch || github.ref_type == 'tag' }}
        runs-on: ubuntu-latest
        needs: compile

        permissions:
            contents: read
            packages: write
            attestations: write
            id-token: write

        steps:
            - name: Clone repository
              uses: actions/checkout@v5

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to Container registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

            - name: Download linux/amd64 artifact
              uses: actions/download-artifact@v5
              with:
                  name: PreviewSynthBot-linux-amd64
                  path: output

            - name: Download linux/arm64 artifact
              uses: actions/download-artifact@v5
              with:
                  name: PreviewSynthBot-linux-arm64
                  path: output

            - name: Build and push Docker image
              id: push
              uses: docker/build-push-action@v6
              with:
                  context: .
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  platforms: linux/amd64,linux/arm64
                  outputs: type=image,name=target,annotation-index.org.opencontainers.image.source=https://github.com/campfred/tg-previewsynth-bot,annotation-index.org.opencontainers.image.description=Telegram bot to automatically convert links into embed-friendly ones for Telegram. âœ¨,annotation-index.org.opencontainers.image.license=GPL-3.0

            - name: Generate artifact attestation
              uses: actions/attest-build-provenance@v3
              with:
                  subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
                  subject-digest: ${{ steps.push.outputs.digest }}
                  push-to-registry: true
